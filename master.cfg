# -*- python -*-
# ex: set syntax=python:

import local_config

PROJNAME = "NumPy"
PROJURL = "http://numpy.scipy.org/"
GITURL = "git://github.com/ceball/numpy.git"
#GITURL = "git://github.com/numpy/numpy.git"
#GITURL = "https://github.com/ceball/numpy"


##################################################################################
### Convenience functions and variables

c = BuildmasterConfig = {}
c['slaves' ] = []
c['schedulers'] = []
c['builders'] = []
c['status'] = []
c['change_source'] = []
slave_locks = {}

from buildbot.buildslave import BuildSlave
from buildbot.locks import SlaveLock

def add_slave(name):
    c['slaves'].append(BuildSlave(
            name,local_config.slave_passwords[name],
            notify_on_missing=local_config.NOTIFICATION_EMAIL))

    slave_locks[name] = SlaveLock(name,maxCount=1)


def add_builder(name,factory_,slavename,lock=True,builddir=None):
    if builddir is None:
        builddir = name

    # CB: might need to extend to support multiple locks
    if lock is True:
        locks = [slave_locks[slavename]]
    else:
        locks = None

    c['builders'].append( 
        dict(name=name,slavename=slavename,builddir=builddir,
             factory=factory_,locks=locks))


### Building, checkout, etc

from buildbot.steps.source import Git
def git_clone(factory_,mode="update"):
    factory_.addStep(Git(repourl=GITURL,mode=mode))


from buildbot.steps.shell import ShellCommand
def add_command(factory_,command_,**kw):
    factory_.addStep(ShellCommand,command=command_,**kw)

def build_and_test(factory_):
    add_command(factory_,["echo","e.g.","use","tox"],description=['nothing'])

##################################################################################



##################################################################################
### General config

c['slavePortnum'] = local_config.BBPORT
c['buildbotURL'] = local_config.BBURL
c['projectName'] = PROJNAME
c['projectURL'] = PROJURL

##################################################################################



##################################################################################
### Status reports

# web page
from buildbot.status.html import WebStatus
c['status'].append(WebStatus(local_config.WEBPORT,allowForce=False,
                             change_hook_dialects={ #'github' : True, 
                                                    'base'   : True}))

# CB: enable github change_hook_dialect in bb 0.8.7 (when bug #2186 is
# fixed). Could then remove git poller. Should also then restrict
# ChangeFilters to numpy github repo and set a reasonable value for
# treeStableTimer.


# CB: Need to configure email to go to e.g. a bb list, but also to 
# individual users.
#from buildbot.status import mail
#c['status'].append(mail.MailNotifier(fromaddr=NOTIFICATION_EMAIL,
#                                     mode='failing',
#                                     extraRecipients=[NOTIFICATION_EMAIL],
#                                     sendToInterestedUsers=False))


##################################################################################
### Change sources

from buildbot.changes.gitpoller import GitPoller

c['change_source'].append(GitPoller(
        repourl=GITURL,
        branch='master',
        workdir='gitpoller',
        pollinterval=30*60))

##################################################################################



##################################################################################
### Slaves

add_slave("doozy")

##################################################################################



##################################################################################
### Build factories (for creating actual builders)

from buildbot.process.factory import BuildFactory

# build, test, coverage
full = BuildFactory()
git_clone(full)
build_and_test(full)

##################################################################################
    


##################################################################################
### Builders

# CB: two basic examples for testing

add_builder("x86_64_UbuntuLucid",full,"doozy")
add_builder("pull_requests",full,"doozy")

##################################################################################



##################################################################################
### Schedulers 

from buildbot.changes.filter import ChangeFilter
from buildbot.schedulers.basic import SingleBranchScheduler,Scheduler

# CB: two examples for testing; would add more.

### schedules builds after pushes to master
full = SingleBranchScheduler(
    name="full",
    change_filter=ChangeFilter(branch="master"), 
    builderNames=["x86_64_UbuntuLucid"])

c['schedulers'].append(full)

### schedules builds after pull request trigger
pr = Scheduler(
    name = "pull request builder", 
    change_filter=ChangeFilter(category='pull-requests'),
    treeStableTimer=1,
    builderNames=['pull_requests'])
    # ALERT: restrict to trigger by particular user (in node-bb config)    

c['schedulers'].append(pr)
